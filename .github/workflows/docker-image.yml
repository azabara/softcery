#Test PR!
name: CI/CD

on:
  push:
    branches:
      - main
      
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::101464699422:role/github-actions
          aws-region: eu-central-1
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Cache Docker Buildx cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Load Docker Buildx cache
        run: |
          if [ -d /tmp/.buildx-cache ]; then
            mkdir -p /tmp/.buildx-cache
            tar -C /tmp/.buildx-cache -xf /tmp/.buildx-cache/image.tar
          fi

      - name: Build, tag, and push Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: 101464699422.dkr.ecr.eu-central-1.amazonaws.com/softcery-repository
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build --platform linux/amd64 -t $REPOSITORY:$IMAGE_TAG --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache .
          docker push $REPOSITORY:$IMAGE_TAG

      - name: Save Docker Buildx cache
        run: |
          mkdir -p /tmp/.buildx-cache
          docker buildx create --name mybuilder
          docker buildx build --platform linux/amd64 --builder mybuilder --output type=local,dest=/tmp/.buildx-cache .
          tar -C /tmp/.buildx-cache -cf /tmp/.buildx-cache/image.tar .

      - name: Cache Docker Buildx cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region           : eu-central-1
          
      - name: Update ECS service
        env:
          ECS_CLUSTER_NAME: softcery-cluster
          ECS_SERVICE_NAME: softcery-service
          ECR_REPOSITORY: 101464699422.dkr.ecr.eu-central-1.amazonaws.com/softcery-repository
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --force-new-deployment --region $AWS_REGION
