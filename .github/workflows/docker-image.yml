#Test PR!
name: Softcery

on:
  push:
    branches:
      - main
      
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::101464699422:role/github-actions
          aws-region: eu-central-1
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('Dockerfile') }}

      - name: Build, tag, and push docker image to Amazon ECR
        env:
            REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            REPOSITORY: 101464699422.dkr.ecr.eu-central-1.amazonaws.com/softcery-repository
            IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REPOSITORY:${{ env.IMAGE_TAG }} .
          docker push $REPOSITORY:${{ env.IMAGE_TAG }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region           : eu-central-1
          
      - name: Update ECS service
        env:
          ECS_CLUSTER_NAME: softcery-cluster
          ECS_SERVICE_NAME: softcery-service
          ECR_REPOSITORY: 101464699422.dkr.ecr.eu-central-1.amazonaws.com/softcery-repository
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --force-new-deployment --region $AWS_REGION
